replicaCount: 1

image:
  repository: pihole/pihole
  tag: v4.4
  pullPolicy: IfNotPresent

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name:

extraEnvs: {}
  # TZ: Europe/Berlin
secretEnvs: {}
  # WEBPASSWORD: secretPassword

service:
  type: ClusterIP
  annotations: {}
    # metallb.universe.tf/allow-shared-ip: pi-hole

ports:
  dns-tcp:
    port: 53
    protocol: TCP
  dns-udp:
    port: 53
    protocol: UDP
  bootp:
    port: 67
    protocol: UDP
  http:
    port: 80
    protocol: TCP
  https:
    port: 443
    protocol: TCP

persistence:
  enabled: true
  accessMode: ReadWriteOnce
  existingClaim: ""
  ## database data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: "-"
  size: 1Gi
  pihole:
    mountPath: /etc/pihole
    subPath: pihole
  dnsmasq:
    mountPath: /etc/dnsmasq.d
    subPath: dnsmasq

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: pi-hole.lan
      paths: /

  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
