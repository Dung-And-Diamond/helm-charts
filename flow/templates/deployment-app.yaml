apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "flow.fullname" . }}
  labels:
    app: {{ template "flow.name" . }}
    component: app
    chart: {{ template "flow.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app: {{ template "flow.name" . }}
      component: app
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "flow.name" . }}
        component: app
        release: {{ .Release.Name }}
      annotations:
        {{- include "flow.annotations" . | nindent 8 }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: FLOW_CONTEXT
              value: Production
            - name: FLOW_REWRITEURLS
              value: "1"
          envFrom:
            - secretRef:
                name: {{ template "flow.fullname" . }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 180
            timeoutSeconds: 5
            periodSeconds: 15
          readinessProbe:
            periodSeconds: 25
            failureThreshold: 5
            timeoutSeconds: 10
            exec:
              command: ["su", "www-data", "-s", "/bin/bash", "-m", "-c", "php /app/flow app:isready"]
          resources:
            {{ toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config
              mountPath: /app/Configuration/Production
      volumes:
        - name: config
          configMap:
            name: {{ template "flow.fullname" . }}
